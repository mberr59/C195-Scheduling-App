1. Login Screen functionality

3. Validate username and password used on the login screen

4. Write code to provide an alert when there is an appointment within 15 minutes of the user’s log-in.
   A custom message should be displayed in the user interface and include the appointment ID, date, and time.
   If the user does not have any appointments within 15 minutes of logging in, display a custom message in the user
   interface indicating there are no upcoming appointments.

5. Write code that generates accurate information in each of the following reports and will display the reports in the
   user interface:

   Note: You do not need to save and print the reports to a file or provide a screenshot.

   •  the total number of customer appointments by type and month

   •  a schedule for each contact in your organization that includes appointment ID, title, type and description,
      start date and time, end date and time, and customer ID

   •  an additional report of your choice that is different from the two other required reports in this prompt and from
      the user log-in date and time stamp that will be tracked in part C

6. Write code that provides the ability to track user activity by recording all user log-in attempts, dates,
   and time stamps and whether each attempt was successful in a file named login_activity.txt. Append each new record
   to the existing file, and save to the root folder of the application.

7.  Provide descriptive Javadoc comments for at least 70 percent of the classes and their members throughout the code,
    and create an index.html file of your comments to include with your submission based on Oracle’s guidelines for the
    Javadoc tool best practices. Your comments should include a justification for each lambda expression in the method
    where it is used.

8. Create a README.txt file that includes the following information:

   •  title and purpose of the application

   •  author, contact information, student application version, and date

   •  IDE including version number (e.g., IntelliJ Community 2020.01), full JDK of version used (e.g., Java SE 17.0.1),
      and JavaFX version compatible with JDK version (e.g. JavaFX-SDK-17.0.1)

   •  directions for how to run the program

   •  a description of the additional report of your choice you ran in part A3f

   •  the MySQL Connector driver version number, including the update number (e.g., mysql-connector-java-8.1.23)






